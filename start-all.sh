#!/bin/bash

# ==============================================
# üè• Script de Inicio Completo del Sistema
# ==============================================

echo "=========================================="
echo "üè• Iniciando Sistema Hospitalario"
echo "=========================================="
echo ""

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# ==============================================
# 1. VERIFICAR E INICIAR XAMPP
# ==============================================
echo -e "${YELLOW}üì¶ Paso 1: Verificando XAMPP...${NC}"

# Verificar si XAMPP est√° instalado
if [ ! -d "/opt/lampp" ]; then
    echo -e "${RED}‚ùå Error: XAMPP no est√° instalado en /opt/lampp${NC}"
    exit 1
fi

# Verificar estado de XAMPP
APACHE_STATUS=$(sudo /opt/lampp/lampp status | grep "Apache" | grep "running")
MYSQL_STATUS=$(sudo /opt/lampp/lampp status | grep "MySQL" | grep "running")

if [ -z "$APACHE_STATUS" ] || [ -z "$MYSQL_STATUS" ]; then
    echo "üöÄ Iniciando XAMPP..."
    sudo /opt/lampp/lampp start
    sleep 2
else
    echo -e "${GREEN}‚úÖ XAMPP ya est√° corriendo${NC}"
fi

# Verificar que Apache y MySQL est√©n activos
sleep 1
if sudo /opt/lampp/lampp status | grep -q "Apache is running"; then
    echo -e "${GREEN}‚úÖ Apache corriendo en puerto 80${NC}"
else
    echo -e "${RED}‚ùå Apache no pudo iniciarse${NC}"
    exit 1
fi

if sudo /opt/lampp/lampp status | grep -q "MySQL is running"; then
    echo -e "${GREEN}‚úÖ MySQL corriendo en puerto 3306${NC}"
else
    echo -e "${RED}‚ùå MySQL no pudo iniciarse${NC}"
    exit 1
fi

echo ""

# ==============================================
# 2. INICIAR SERVICIO PYTHON (API de Estad√≠sticas)
# ==============================================
echo -e "${YELLOW}üêç Paso 2: Iniciando servicio Python...${NC}"

cd hospital_stats_api

# Verificar si el entorno virtual existe
if [ ! -d "venv" ]; then
    echo "‚ö†Ô∏è  Entorno virtual no encontrado. Creando..."
    python3 -m venv venv
    echo "üì¶ Instalando dependencias..."
    venv/bin/pip install -r requirements.txt
fi

# Verificar si el puerto 8000 est√° en uso
if lsof -Pi :8000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Puerto 8000 en uso. Liberando..."
    kill -9 $(lsof -ti :8000) 2>/dev/null
    sleep 1
fi

# Iniciar el servidor Python en background
echo "üöÄ Iniciando API de estad√≠sticas..."
nohup venv/bin/python main.py > server.log 2>&1 &
PYTHON_PID=$!

# Esperar a que el servidor inicie
sleep 3

# Verificar que el servidor est√© corriendo
if curl -s http://localhost:8000/ > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API Python corriendo en puerto 8000${NC}"
    echo "   PID: $PYTHON_PID"
else
    echo -e "${RED}‚ùå API Python no pudo iniciarse${NC}"
    echo "   Revisa el archivo: hospital_stats_api/server.log"
fi

cd ..
echo ""

# ==============================================
# 3. INICIAR FRONTEND (React + Vite)
# ==============================================
echo -e "${YELLOW}‚öõÔ∏è  Paso 3: Iniciando frontend React...${NC}"

# Verificar si node_modules existe
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando dependencias de Node.js..."
    npm install
fi

# Verificar si el puerto 5174 est√° en uso
if lsof -Pi :5174 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Puerto 5174 en uso. Liberando..."
    kill -9 $(lsof -ti :5174) 2>/dev/null
    sleep 1
fi

# Iniciar el frontend en background
echo "üöÄ Iniciando servidor de desarrollo..."
nohup npm run dev > frontend.log 2>&1 &
FRONTEND_PID=$!

# Esperar a que el servidor inicie
sleep 3

# Verificar que el servidor est√© corriendo
if curl -s http://localhost:5174/ > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend corriendo en puerto 5174${NC}"
    echo "   PID: $FRONTEND_PID"
else
    echo -e "${RED}‚ùå Frontend no pudo iniciarse${NC}"
    echo "   Revisa el archivo: frontend.log"
fi

echo ""
echo "=========================================="
echo -e "${GREEN}‚úÖ SISTEMA INICIADO CORRECTAMENTE${NC}"
echo "=========================================="
echo ""
echo "üåê URLs disponibles:"
echo "   ‚Ä¢ Frontend:        http://localhost:5174"
echo "   ‚Ä¢ API PHP:         http://localhost/hospital_api/"
echo "   ‚Ä¢ API Python:      http://localhost:8000"
echo "   ‚Ä¢ Documentaci√≥n:   http://localhost:8000/docs"
echo "   ‚Ä¢ phpMyAdmin:      http://localhost/phpmyadmin"
echo ""
echo "üìä Servicios corriendo:"
echo "   ‚Ä¢ XAMPP (Apache + MySQL)"
echo "   ‚Ä¢ Python API (PID: $PYTHON_PID)"
echo "   ‚Ä¢ React Frontend (PID: $FRONTEND_PID)"
echo ""
echo "üõë Para detener todo, ejecuta: ./stop-all.sh"
echo ""
